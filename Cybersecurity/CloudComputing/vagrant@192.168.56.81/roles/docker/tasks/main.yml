- name: Update all packages
  become: true
  ansible.builtin.apt:
    update_cache: true

- name: Install required packages
  become: true
  ansible.builtin.apt:
    pkg: "{{ docker_dependencies_pkg }}"

- name: Create directory for Docker's GPG key
  become: true
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'

- name: Add Docker's official GPG key
  become: true
  ansible.builtin.get_url:
    url: https://download.docker.com/linux/ubuntu/gpg
    dest: /etc/apt/keyrings/docker.asc
    mode: '0644'

- name: Get DEB architecture
  become: true
  ansible.builtin.command: dpkg --print-architecture
  register: deb_architecture
  changed_when: false

- name: Print architecture variables
  ansible.builtin.debug:
    msg: "Architecture: {{ deb_architecture.stdout }}, Codename: {{ ansible_lsb.codename }}"

- name: Add Docker repository
  become: true
  ansible.builtin.apt_repository:
    repo: >-
      deb [arch={{ deb_architecture.stdout }}
      signed-by=/etc/apt/keyrings/docker.asc]
      https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable
    filename: docker
    state: present

- name: Install Docker and related packages
  become: true
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
    update_cache: true
  loop: "{{ docker_packages }}"

- name: Add Docker group
  become: true
  ansible.builtin.group:
    name: docker
    state: present

- name: Add user to Docker group
  become: true
  ansible.builtin.user:
    name: "{{ ansible_user }}"
    groups: docker
    append: true

- name: Enable and start Docker services
  become: true
  ansible.builtin.systemd:
    name: "{{ item }}"
    enabled: true
    state: started
  loop: "{{ docker_services }}"
